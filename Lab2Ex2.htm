<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="UTF-8">
<title>CS424, Lab 2, Exercise 2</title>
<style>
    /* Style dla canvas */
    body {
        background-color: #DDDDDD;
        -webkit-user-select: none; /* wyłączenie zaznaczania tekstu */
        -moz-user-select: none;
        -ms-user-select: none;
        -o-user-select: none;
        user-select: none;
    }
    canvas {
        background-color: white;
        display: block;
    }
    #canvasholder {
        border:2px solid black;
        float: left;
    }
</style>
</head>
<body onload="init()">

<h2>Lab 2, Exercise 2: Mousing</h2>

<noscript>
<p>JavaScript is required to use this page.</p>
</noscript>

<p><b>Color:</b>
    <select id="colorChoice" onchange="setColor()">
        <option value="0" selected="selected">Random</option>
        <option value="1">Red</option>
        <option value="2">Green</option>
        <option value="3">Blue</option>
        <option value="4">Yellow</option> <!-- Nowy kolor -->
    </select>
</p>

<p><button onclick="clearCanvas()">Clear</button></p> <!-- Przycisk "Clear" -->

<p><b>Choose Polygon:</b>
    <select id="polygonChoice">
        <option value="0" selected="selected">None</option>
        <option value="3">Triangle</option>
        <option value="4">Square</option>
        <option value="5">Pentagon</option>
        <option value="6">Hexagon</option>
    </select>
</p>

<div id="canvasholder">
<canvas id="canvas" width="800" height="600">
    Canvas not supported.
</canvas>
</div>

<script>
    "use strict";

    var canvas;
    var graphics;
    var currentColor = randomColorString();

    function randomColorString() {
        var r = Math.floor(256*Math.random());
        var g = Math.floor(256*Math.random());
        var b = Math.floor(256*Math.random());
        return "rgb(" + r + "," + g + "," + b + ")";
    }

    function setColor() {
        var colorChoice = document.getElementById("colorChoice").value;
        if (colorChoice === "0") {
            currentColor = randomColorString();
        } else if (colorChoice === "1") {
            currentColor = "red";
        } else if (colorChoice === "2") {
            currentColor = "green";
        } else if (colorChoice === "3") {
            currentColor = "blue";
        } else if (colorChoice === "4") {
            currentColor = "yellow";
        }
    }

    function clearCanvas() {
        graphics.clearRect(0, 0, canvas.width, canvas.height);
    }

    function drawPolygon(x, y, sides, size) {
        graphics.beginPath();
        var angle = Math.PI * 2 / sides;
        for (var i = 0; i < sides; i++) {
            var newX = x + size * Math.cos(angle * i);
            var newY = y + size * Math.sin(angle * i);
            if (i === 0) {
                graphics.moveTo(newX, newY);
            } else {
                graphics.lineTo(newX, newY);
            }
        }
        graphics.closePath();
        graphics.fill();
    }

    function installMouseHandler() {
        canvas.addEventListener("mousemove", function(evt) {
            var x = evt.clientX - canvas.getBoundingClientRect().left;
            var y = evt.clientY - canvas.getBoundingClientRect().top;
            var choice = parseInt(document.getElementById("polygonChoice").value);
            if (choice > 0) {
                graphics.fillStyle = currentColor;
                switch (choice) {
                    case 3:
                        drawPolygon(x, y, 3, 50);
                        break;
                    case 4:
                        drawPolygon(x, y, 4, 50);
                        break;
                    case 5:
                        drawPolygon(x, y, 5, 50);
                        break;
                    case 6:
                        drawPolygon(x, y, 6, 50);
                        break;
                }
            }
        });
    }

    function addGraphicsContextExtras(graphics) {
        // Dodatkowe funkcje graficzne
    }

    function init() {
        try {
            canvas = document.getElementById("canvas");
            graphics = canvas.getContext("2d");
        } catch(e) {
            document.getElementById("canvasholder").innerHTML =
               "<p>Canvas graphics is not supported.<br>" +
               "An error occurred while initializing graphics.</p>";
               return;
        }
        addGraphicsContextExtras(graphics);
        installMouseHandler();
        graphics.fillStyle = "white";
        graphics.fillRect(0,0,canvas.width,canvas.height);
    }

</script>

</body>
</html>
